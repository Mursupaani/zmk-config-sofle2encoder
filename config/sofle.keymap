/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1100  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 72   // 10
#define ZMK_MOUSE_SCRL_VAL 72

#include "keys_us_international.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/rgb.h>

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMK Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

&pinctrl {
    spi3_default: spi3_default {
        group1 { psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>; };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */

        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <30>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen { zmk,underglow = &led_strip; };
};

/* END temporary RGB support section */

// Encoders

&sensors { triggers-per-rotation = <30>; };

&left_encoder { steps = <60>; };

&right_encoder { steps = <60>; };

&mmv {
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;
    time-to-max-speed-ms = <1000>;    // 500
    acceleration-exponent = <1>;      // 1
    delay-ms = <0>;                   // 0
};

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        system_layer {
            if-layers = <3 4>;
            then-layer = <5>;
        };
    };

    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <20 21>;
        };

        delete_right {
            bindings = <&kp DELETE>;
            key-positions = <59 55>;
        };

        toggle_symbols {
            bindings = <&tog 3>;
            key-positions = <14 15 16>;
        };

        toggle_nav {
            bindings = <&tog 4>;
            key-positions = <19 20 21>;
        };

        toggle_finnish {
            bindings = <&tog 2>;
            key-positions = <36 49>;
        };

        capslock {
            bindings = <&kp CAPS>;
            key-positions = <54 55>;
        };

        delete_left {
            bindings = <&kp DELETE>;
            key-positions = <54 50>;
        };

        rgb_settings {
            bindings = <&tog 6>;
            key-positions = <0 5>;
        };
    };

    behaviors {
        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <POUND MINUS BACKSPACE UNDERSCORE>;
        };

        LayerHold_KeyTap: LayerHold_KeyTap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERHOLD_KEYTAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <0>;
        };

        scroll_up_down: scroll_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            tap-ms = <40>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            label = "SCROLL_UP_DOWN";
        };

        key_tap_hold_layer_toggle: key_tap_hold_layer_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "KEY_TAP_HOLD_LAYER_TOGGLE";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <0>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
        };
    };

    macros {
        vim_file_top: vim_file_top {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp G>;
            label = "VIM_FILE_TOP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&gresc        &kp C_BRI_DEC  &kp C_BRIGHTNESS_INC  &kp LC(K)     &kp K_CONTEXT_MENU           &kp PRINTSCREEN                                                   &mt C_POWER C_AL_LOCK  &kp C_PREVIOUS           &kp C_PP      &kp C_NEXT            &kp MINUS    &kp EQUAL
&kp TAB       &kp EN_Q       &kp EN_W              &kp EN_F      &kp EN_P                     &kp EN_B                                                          &kp EN_J               &kp EN_L                 &kp EN_U      &kp EN_Y              &kp EN_SEMI  &kp EN_BSLH
&caps_word    &kp EN_A       &kp EN_R              &kp EN_S      &kp EN_T                     &kp EN_G                                                          &kp EN_M               &kp EN_N                 &kp EN_E      &kp EN_I              &kp EN_O     &kp EN_SINGLE_QUOTE
&kp LEFT_ALT  &kp EN_Z       &kp EN_X              &kp EN_C      &kp EN_D                     &kp EN_V         &kp C_MUTE            &tog 1                     &kp EN_K               &kp EN_H                 &kp EN_COMMA  &kp EN_DOT            &kp EN_FSLH  &kp RIGHT_ALT
                             &kp LS(LEFT_CONTROL)  &kp LEFT_GUI  &mt LEFT_CONTROL UNDERSCORE  &lt 3 SPACE      &mt LEFT_SHIFT ESC    &mt RIGHT_SHIFT BACKSPACE  &lt 4 ENTER            &mt RIGHT_CONTROL MINUS  &kp LEFT_GUI  &kp LS(LEFT_CONTROL)
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&scroll_up_down>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        rotary_arrows {
            display-name = "Rot arr";
            bindings = <
&gresc        &kp C_BRI_DEC  &kp C_BRIGHTNESS_INC  &kp LC(K)     &kp K_CONTEXT_MENU           &kp PRINTSCREEN                                                   &mt C_POWER C_AL_LOCK  &kp C_PREVIOUS           &kp C_PP      &kp C_NEXT            &kp MINUS    &kp EQUAL
&kp TAB       &trans         &trans                &trans        &trans                       &trans                                                            &trans                 &trans                   &trans        &trans                &kp EN_SEMI  &kp EN_BSLH
&caps_word    &trans         &trans                &trans        &trans                       &trans                                                            &trans                 &trans                   &trans        &trans                &kp EN_O     &kp EN_SINGLE_QUOTE
&kp LEFT_ALT  &trans         &trans                &trans        &trans                       &trans           &kp C_MUTE            &tog 1                     &trans                 &trans                   &kp EN_COMMA  &kp EN_DOT            &kp EN_FSLH  &kp RIGHT_ALT
                             &kp LS(LEFT_CONTROL)  &kp LEFT_GUI  &mt LEFT_CONTROL UNDERSCORE  &lt 3 SPACE      &mt LEFT_SHIFT ESC    &mt RIGHT_SHIFT BACKSPACE  &lt 4 ENTER            &mt RIGHT_CONTROL MINUS  &kp LEFT_GUI  &kp LS(LEFT_CONTROL)
            >;

            sensor-bindings =
                <&inc_dec_kp RIGHT LEFT>,
                <&inc_dec_kp DOWN UP>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        finnish_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans                        &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &mt EN_SEMICOLON EN_O_UMLAUT  &mt EN_BSLH EN_A_RING
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans                        &mt RA(EN_SINGLE_QUOTE) EN_A_UMLAUT
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans                        &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>;

            label = "Fin";
        };

        symbol_layer {
            display-name = "Symbols";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans  &kp F1          &kp F2           &kp F3                &kp F4                 &kp F5                         &kp F6              &kp F7        &kp F8        &kp F9        &kp F10        &kp F11
&trans  &kp SLASH       &kp ASTERISK     &kp MINUS             &kp PLUS               &kp PERCENT                    &kp EXCLAMATION     &kp N7        &kp N8        &kp N9        &kp BACKSLASH  &kp F12
&trans  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT_SIGN                    &kp EQUAL           &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PIPE       &kp LCTRL
&trans  &kp HASH        &kp TILDE        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AMPS     &trans    &trans  &mt EN_EURO DOLLAR  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD     &trans
                        &trans           &trans                &trans                 &trans       &trans    &trans  &trans              &kp N0        &kp SPACE     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOLUME_DOWN>,
                <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        nav_layer {
            display-name = "Nav";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&trans  &trans     &trans        &trans        &trans         &trans                    &trans  &trans       &trans      &trans      &trans     &trans
&trans  &trans     &trans        &trans        &trans         &trans                    &trans  &kp N0       &kp CARET   &kp DOLLAR  &trans     &trans
&trans  &kp LS(G)  &kp LC(EN_D)  &kp LC(EN_U)  &vim_file_top  &trans                    &trans  &kp LEFT     &kp DOWN    &kp UP      &kp RIGHT  &trans
&trans  &trans     &trans        &trans        &trans         &trans  &trans    &trans  &trans  &kp K_PASTE  &kp K_COPY  &kp K_CUT   &trans     &trans
                   &trans        &trans        &trans         &trans  &trans    &trans  &trans  &trans       &trans      &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LC(PLUS) LC(MINUS)>,
                <&inc_dec_kp C_AC_ZOOM_IN C_AC_ZOOM_OUT>;
        };

        system_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "System";
            bindings = <
&bt BT_CLR_ALL     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                     &none  &none           &none           &none         &none            &none
&ext_power EP_TOG  &none         &none         &none         &rgb_ug RGB_BRI  &studio_unlock                   &none  &msc SCRL_UP    &none           &none         &none            &none
&none              &none         &mkp RCLK     &mkp MCLK     &mkp LCLK        &rgb_ug RGB_TOG                  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none
&none              &none         &none         &none         &rgb_ug RGB_BRD  &none            &none    &none  &none  &msc SCRL_DOWN  &none           &none         &none            &none
                                 &none         &none         &none            &none            &none    &none  &none  &none           &none           &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        rgb_setup {
            display-name = "RGB setup";
            bindings = <
&none  &none                             &none            &none            &none            &none                                             &none  &none  &none  &none  &none  &none
&none  &rgb_ug RGB_COLOR_HSB(140,57,27)  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_COLOR_HSB(208,78,27)                  &none  &none  &none  &none  &none  &none
&none  &rgb_ug RGB_COLOR_HSB(24,95,29)   &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_TOG                                   &none  &none  &none  &none  &none  &none
&none  &rgb_ug RGB_SPD                   &rgb_ug RGB_SPI  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_COLOR_HSB(0,100,50)   &none    &none  &none  &none  &none  &none  &none  &none
                                         &none            &none            &none            &none                             &none    &none  &none  &none  &none  &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };
    };
};
